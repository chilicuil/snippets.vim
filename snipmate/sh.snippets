snippet #!
	#!/bin/sh
	
snippet $
	"${${1:var}}"${2}
snippet "
	""
snippet if
	if [ ${1:condition} ]; then
		${2:#statements}
	fi
snippet elif
	elif [ ${1:condition} ]; then
		${2:#statements}
snippet [
	[ ${1:-z} ${2:condition} ]
snippet for
	for ${1:var}; do
		${2:#statements}
	done
snippet fori
	${2:i}="0" ; while [ "${$2}" -lt "${1:count}" ]; do
		$2="$((${$2} + 1)"; ${3:#statements}
	done
snippet while
	while [ ${1:condition} ]; do
		${2:#statements}
	done
snippet whilei
	${2:i}="0" ; while [ "${$2}" -lt "${1:count}" ]; do
		$2="$((${$2} + 1)"; ${3:#statements}
	done
snippet until
	until [ ${1:condition} ]; do
		${2:#statements}
	done
snippet case
	case ${1:word} in
		${2:pattern})
			${3};;
	esac
snippet fun
	${1:_function}() {
	    ${2}
	}
snippet progname
	progname="$(expr "${${1:0}}" : '.*/\([^/]*\)')"${2}
snippet basename
	expr "${1:var}" : '.*/\([^/]*\)'${2}
snippet echo
	printf "%s\\n" ${1:"string"}
snippet printf
	printf "%s\\n" ${1:"string"}
snippet which
	command -v "${1:cmd}"${2}
snippet r>
	#close stdout
	exec 1<&-
	#close stderr
	exec 2<&-
	#open stdout as $log_file file for read and write.
	exec 1<> ${1:"logfile"}
	#redirect stderr to stdout
	exec 2>&1
	${2}
snippet redirect
	#close stdout
	exec 1<&-
	#close stderr
	exec 2<&-
	#open stdout as $log_file file for read and write.
	exec 1<> ${1:"logfile"}
	#redirect stderr to stdout
	exec 2>&1
	${2}
snippet version
	`strftime("%Y.%m.%d-%H:%M")`
